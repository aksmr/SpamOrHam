{"version":3,"sources":["Components/Form.js","Components/Result.js","Components/Copyright.js","App.js","reportWebVitals.js","index.js"],"names":["styles","buttonResult","cursor","buttonClear","form","marginTop","padding","ResultButton","styled","Button","color","theme","palette","getContrastText","fontFamily","backgroundColor","borderColor","ClearButton","CustomTextField","TextField","borderBottomColor","borderWidth","Form","props","Grid","container","spacing","xs","sm","md","lg","justifyContent","alignItems","style","item","label","id","name","size","autoFocus","fullWidth","variant","value","onClick","message","document","getElementById","undefined","axios","get","encodeURIComponent","then","res","data","catch","err","console","log","jsonRes","hookResult","result","fontSize","margin","Result","printResult","prediction","toUpperCase","footer","link","textDecoration","fontWeight","Copyright","href","Date","getFullYear","app","textAlign","background","height","title","marginBottom","explication","App","useState","setResult","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ecd68b08.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport {Button, TextField, Grid} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst styles = {\r\n    buttonResult: {\r\n        cursor: 'pointer',\r\n    },\r\n    buttonClear: {\r\n        cursor: 'pointer',\r\n    },\r\n    form: {\r\n        marginTop: '4vh',\r\n        padding: '0vh 9vh 0vh 9vh',\r\n    },\r\n}\r\n\r\nconst ResultButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText('#000000'),\r\n    fontFamily: `Shadows Into Light, cursive`,\r\n    backgroundColor: '#343a40',\r\n    borderColor:'#343a40',\r\n    '&:hover': {\r\n        backgroundColor: 'black',\r\n        borderColor:'black',\r\n    },\r\n}));\r\n\r\nconst ClearButton = styled(Button)(({ theme }) => ({\r\n    color: theme.palette.getContrastText('#000000'),\r\n    fontFamily: `Shadows Into Light, cursive`,\r\n    backgroundColor: '#b71c1c',\r\n    borderColor:'#b71c1c',\r\n    '&:hover': {\r\n        backgroundColor: '#951313',\r\n        borderColor:'#951313',\r\n    },\r\n}));\r\n\r\nconst CustomTextField = styled(TextField)({\r\n    '& label.Mui-root': {\r\n        fontFamily: `Shadows Into Light, cursive`,\r\n    },\r\n    '& label.Mui-focused': {\r\n        color: '#4D3636',\r\n        // fontFamily: `Shadows Into Light, cursive`,\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#4D3636',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n            borderColor: '#4D3636',\r\n        },\r\n        '&:hover fieldset': {\r\n            borderColor: '#4D3636',\r\n            borderWidth:'2px',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: '#4D3636',\r\n        },\r\n    },\r\n});\r\n\r\nexport const Form = (props) => {\r\n    const handleResult = () => {\r\n        let message = document.getElementById(\"message\").value;\r\n\r\n        if(message !== undefined && message !== \"\") {\r\n            axios.get(`/prediction/${encodeURIComponent(message)}`)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n            .then((jsonRes) => {\r\n                props.hookResult(jsonRes)\r\n            })\r\n        } else {\r\n            props.hookResult({'prediction':''})\r\n        }\r\n    }\r\n\r\n    const handleClear = () => {\r\n        props.hookResult({'prediction':''})\r\n        document.getElementById(\"message\").value = \"\";\r\n    }\r\n\r\n    return(\r\n        <Grid container spacing={{ xs: 1, sm:2, md: 3, lg: 3 }} justifyContent=\"space-evenly\" alignItems=\"center\" style={styles.form}>\r\n            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                <CustomTextField \r\n                    label=\"Enter your text...\" \r\n                    id=\"message\" \r\n                    name=\"message\" \r\n                    size=\"small\"\r\n                    autoFocus\r\n                    fullWidth\r\n                />\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                <ResultButton \r\n                    variant=\"outlined\"\r\n                    id=\"buttonResult\"\r\n                    name=\"buttonResult\"\r\n                    value=\"Result\"\r\n                    style={styles.buttonResult}\r\n                    onClick={handleResult}\r\n                    fullWidth\r\n                >\r\n                    Result\r\n                </ResultButton>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6} md={6} lg={6}>\r\n                <ClearButton \r\n                    variant=\"outlined\"\r\n                    id=\"buttonClear\" \r\n                    name=\"buttonClear\" \r\n                    style={styles.buttonClear} \r\n                    onClick={handleClear}\r\n                    fullWidth\r\n                >\r\n                    Clear\r\n                </ClearButton>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","const styles = {\r\n    result: {\r\n        fontSize: `calc(20px + 6vmin)`,\r\n        margin: '3vh',\r\n        color: '#DEDEDE',\r\n    }\r\n}\r\n\r\nexport const Result = (props) => {\r\n    return(\r\n        <div id=\"result\" name=\"result\" style={styles.result}>\r\n            {props.printResult.prediction !== undefined && props.printResult.prediction !== \"\"  ? `This is a ${props.printResult.prediction.toUpperCase()}!` : ``}\r\n        </div>\r\n    )\r\n}","const styles = {\r\n    footer: {\r\n        fontSize: `calc(5px + 3vmin)`,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color:'black',\r\n        fontWeight:'bold',\r\n    },\r\n}\r\n\r\nexport const Copyright = () => {\r\n    return(\r\n        <div style={styles.footer}>\r\n            <small><a href=\"https://github.com/aksmr\" style={styles.link}>AK47</a> Â© {new Date().getFullYear()}</small>\r\n        </div>\r\n    )\r\n}","import {useState} from 'react';\nimport { Form } from './Components/Form';\nimport { Result } from './Components/Result';\nimport { Copyright } from './Components/Copyright';\n\nconst styles = {\n    app: {\n        textAlign: 'center',\n        background: `linear-gradient(to right bottom, #f1e8b8, #caa791, #8e7071, #4d4349, #191919)`,\n        height: '100vh',\n    },\n    title: {\n        fontSize: `calc(10px + 7vmin)`,\n        fontWeight: 'bold',\n        marginBottom: '10vh',\n    },\n    explication: {\n        fontSize: `calc(10px + 3vmin)`,\n        padding:'3vh',\n    },\n}\n\nexport const App = () => {\n    const [result, setResult] = useState({})\n\n\treturn (\n\t\t<div style={styles.app}>\n\t\t\t<div style={styles.title}>Spam or Ham</div>\n            <small style={styles.explication}>The application allows you to find out whether a previously entered text is considered spam or not...</small>\n            <br /><br />\n            <Form hookResult={setResult} />\n            <br />\n            <Result printResult={result} />\n            <br /><br />\n            <Copyright />\n\t\t</div>\n\t);\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}